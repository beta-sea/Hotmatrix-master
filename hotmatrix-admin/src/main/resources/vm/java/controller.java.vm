package ${packageName}.controller;

import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import com.benet.common.annotation.Oplog;
import com.benet.common.core.controller.BaseController;
import com.benet.common.core.domain.AjaxResult;
import com.benet.common.enums.BusinessType;
import com.benet.common.utils.poi.ExcelUtils;
import com.benet.common.utils.string.StringUtils;
#if($table.crud)
import com.benet.common.core.pager.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController
{
    @Autowired
    private I${ClassName}Service ${className}Service;
    /**
         * 首页
         */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:index')")
    @GetMapping(value="/index")
    public ModelAndView index()
    {
        ModelAndView mv=new ModelAndView("index");
        return mv;
    }

    /**
     * 查询${functionName}列表
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:list')")
    @GetMapping(value="/list")
    public TableDataInfo list()
    {
        startPage();
        List<${ClassName}> list = ${className}Service.getAllRecords();
        return getDataTable(list);
    }

    /**
     * 查询${functionName}列表
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:search')")
    @GetMapping(value="/search/{condition}")
    public TableDataInfo search(@PathVariable("condition") String condition)
    {
        List<${ClassName}> list = ${className}Service.getRecordsByPaging(1,10,condition,"id","asc");
        return getDataTable(list);
    }

    /**
     * 新增${functionName}
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:add')")
    @GetMapping(value="/add")
    public AjaxResult add()
    {
        ${ClassName} info=new ${ClassName}();
        return AjaxResult.success(info);
    }

    /**
     * 编辑${functionName}
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:edit')")
    @GetMapping(value="/edit/{id}")
    public AjaxResult edit(@PathVariable("id") String id)
    {
        return AjaxResult.success(${className}Service.getRecordByNo(id));
    }

    /**
     * 保存${functionName}
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:save')")
    @Oplog(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PostMapping(value = "/save")
    public AjaxResult save(@RequestBody ${ClassName} ${className}) {
        if (StringUtils.isNull(${className}Service.getRecordByNo(${className}.getDeptNo()))) {
            return toAjax(${className}Service.AddNewRecord(${className}));
        } else {
            return toAjax(${className}Service.UpdateRecord(${className}));
        }
    }

    /**
     * 删除${functionName}
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:delete')")
    @Oplog(title = "${functionName}", businessType = BusinessType.DELETE)
    //@GetMapping("/delete/{ids}")
    @DeleteMapping("/{ids}")
    public AjaxResult delete(@PathVariable("ids") String[] ids)
    {
        return toAjax(${className}Service.SoftDeleteByNos(ids));
    }

    /**
     * 获取${functionName}详细信息
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:detail')")
    @GetMapping(value = "/detail/{id}")
    public AjaxResult detail(@PathVariable("id") String id)
    {
        return AjaxResult.success(${className}Service.getRecordByNo(id));
    }

    /**
     * 导出${functionName}列表
     */
    @PreAuthorize("@ps.hasPermit('${permissionPrefix}:export')")
    @Oplog(title = "${functionName}", businessType = BusinessType.EXPORT)
    @GetMapping("/export/{condition}")
    public AjaxResult export(@PathVariable("condition") String condition)
    {
        List<${ClassName}> list = ${className}Service.getRecordsByPaging(1,10,condition,"id","asc");
        ExcelUtils<${ClassName}> util = new ExcelUtils<${ClassName}>(${ClassName}.class);
        return util.exportExcel(list, "menu");
    }

}
